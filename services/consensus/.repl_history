#V2
i
call consensus consensus [[1,1,1,0,0,0], 0.666]
call consensus consensus [[true,true, true, false,false,false], 0.666]
call consensus consensus [[true,true, true, true,false,false], 0.666]
i
call consensus consensus [[true,true, true, true,false,false], 0.666]
call consensus consensus [[true,true, true, false,false,false], 0.666]
1> i\nLoaded modules interface:\ndata CResult:\n  stderr: string\n  stdout: []Consensus\ndata Consensus:\n  n: u64\n  threshold: f64\n  valid: u64\n  invalid: u64\n  consensus: bool\n\nconsensus:\n  fn consensus(payload: []bool, threshold: f64) -> CResult\n\n2> call consensus consensus [[true,true, true, true,false,false], 0.666]\nresult: Object({"stderr": String(""), "stdout": Array([Object({"consensus": Bool(true), "invalid": Number(2), "n": Number(6), "threshold": Number(0.666), "valid": Number(4)})])})\n elapsed time: 96.859µs\n\n3> call consensus consensus [[true,true, true, false,false,false], 0.666]\nresult: Object({"stderr": String(""), "stdout": Array([Object({"consensus": Bool(false), "invalid": Number(3), "n": Number(6), "threshold": Number(0.666), "valid": Number(3)})])})\n elapsed time: 52.831µs\n\n4>
1> i\nLoaded modules interface:\ndata CResult:\n  stderr: string\n  stdout: []Consensus\ndata Consensus:\n  n: u64\n  threshold: f64\n  valid: u64\n  invalid: u64\n  consensus: bool\n\nconsensus:\n  fn consensus(payload: []bool, threshold: f64) -> CResult\n\n2> call consensus consensus [[true,true, true, true,false,false], 0.666]\nresult: Object({"stderr": String(""), "stdout": Array([Object({"consensus": Bool(true), "invalid": Number(2), "n": Number(6), "threshold": Number(0.666), "valid": Number(4)})])})\n elapsed time: 96.859µs\n\n3> call consensus consensus [[true,true, true, false,false,false], 0.666]\nresult: Object({"stderr": String(""), "stdout": Array([Object({"consensus": Bool(false), "invalid": Number(3), "n": Number(6), "threshold": Number(0.666), "valid": Number(3)})])})\n elapsed time: 52.831µs\n\n4>call consensus consensus [[true,true, false, false,false,false], 0.666]
1> i\nLoaded modules interface:\ndata CResult:\n  stderr: string\n  stdout: []Consensus\ndata Consensus:\n  n: u64\n  threshold: f64\n  valid: u64\n  invalid: u64\n  consensus: bool\n\nconsensus:\n  fn consensus(payload: []bool, threshold: f64) -> CResult\n\n2> call consensus consensus [[true,true, true, true,false,false], 0.666]\nresult: Object({"stderr": String(""), "stdout": Array([Object({"consensus": Bool(true), "invalid": Number(2), "n": Number(6), "threshold": Number(0.666), "valid": Number(4)})])})\n elapsed time: 96.859µs\n\n3> call consensus consensus [[true,true, true, false,false,false], 0.666]\nresult: Object({"stderr": String(""), "stdout": Array([Object({"consensus": Bool(false), "invalid": Number(3), "n": Number(6), "threshold": Number(0.666), "valid": Number(3)})])})\nlapsed time: 52.831µs\n\n4>call consensus consensus [[true,true, false, false,false,false], 0.666]
i
call consensus consensus [[true,true, false, false,false,false], 0.666]
